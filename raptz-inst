#!/bin/bash

set -e
set -o pipefail

. lib/common.inc

_cpio_mk()
{
	pushd $1 >> $RAPTZ_LOGFILE
	find | while read LINE ; do
		echo $LINE
		echo $LINE >&2
	done | cpio -o
	popd >> $RAPTZ_LOGFILE
}

# make jffs2 file
_jffs2_mk()
{
	#remove duplicate directory listing
	JFFS2_OPTS="-l -n -e 128"
	mkfs.jffs2 $JFFS2_OPTS --root $RAPTZ_SYSROOT -v -o $1  2>&1 |  grep -v "^[[:space:]]d" 
}


# Exctact $1 to $2
_cpio_ext()
{
	pushd $2
	_cpio_mk $1 | cpio -i 
	popd
}

_filesize()
{
	echo "Filesize: $(( $(stat --format=%s $1) / 1048576 )) MB"
}

_help()
{
	echo ""
	echo "$(basename $0) [options]"
	echo ""
	echo "Options:"
	echo "  -j <file> Create jffs2 archive"
	echo "  -i <file> Create cpio archive"
	echo "  -d <dev>  Device name to install to (default none)"
	echo "  -c        Clean device (create new filesystem)"
	echo "  -f        Force unpacking (very dangerous)"
	echo ""
	echo "Logfile is $RAPTZ_LOGFILE"
	echo ""
	exit
}

_common_opts "d:i:j:cf" $@
_common_ui
_common_chk_mount


mkdir -p images

if [ -n "$RAPTZ_JFFS2" ] ; then
	# Lines + compression info (7 lines)
	TOT=$(( $(find $RAPTZ_SYSROOT | wc -l) + 7 ))
	_jffs2_mk $RAPTZ_JFFS2 | _log_num $TOT "Create $RAPTZ_JFFS2 jffs2 file"	
	_filesize $RAPTZ_JFFS2
fi

if [ -n "$RAPTZ_IMAGE" ] ; then
	TOT=$(find $RAPTZ_SYSROOT | wc -l) 
	_cpio_mk $RAPTZ_SYSROOT 2>&1 >$RAPTZ_IMAGE | _log_num $TOT "Create $RAPTZ_IMAGE  file"
	_filesize $RAPTZ_IMAGE
fi


if [ -n "$RAPTZ_DEV" ] ; then 
	# ensure device is avalible
	if (( $RAPTZ_FORCE == 0 )) ; then
		BLKDEV=${RAPTZ_DEV:0:-1}
		[ -b /dev/$BLKDEV ] || \
			_error "Could not find /dev/$BLKDEV or not a blockdevice"
		[ -b /dev/$RAPTZ_DEV ] || \
			_error "Could not find /dev/$RAPTZ_DEV or not a blockdevice"
		if [ -e /sys/block/$BLKDEV/removable ] ; then
			(( $(cat /sys/block/$BLKDEV/removable) == 1 )) || \
				_error "Device $RAPTZ_DEV is not a removable device"
		fi
	fi
	if (( $RAPTZ_CLEAN == 1 )) ; then
		mkfs.ext3 /dev/$RAPTZ_DEV 2>&1 | _log "Creating ext3 filesystem on $RAPTZ_DEV" 
	fi
	echo "Mounting $RAPTZ_DEV"
	MNT=$(mktemp -d)
	TOT=$(find $RAPTZ_SYSROOT | wc -l) 
	mount /dev/$RAPTZ_DEV $MNT
	
	_cpio_ext $RAPTZ_SYSROOT $MNT 2>&1 | _log_num $TOT "Filling $RAPTZ_DEV"
	
	echo "UnMounting"
	umount $MNT
	rmdir $MNT
fi

echo ""
