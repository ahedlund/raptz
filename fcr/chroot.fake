#!/usr/bin/python

import sys
import os
import glob
from subprocess import call, Popen

env= os.environ
root = os.path.join(os.getcwd(), sys.argv[1])

library_path=[ 
	"/usr/lib",
	"/lib",
	"/usr/lib/arm-linux-gnueabi/fakechroot/",
	"/usr/lib/arm-linux-gnueabi/libfakeroot",

]
library_path=[ root+x for x in library_path]
def library_path_list(root, path):
	f = open(path, "r")
	ret = []
	for line in f:
		line = line.strip()
		if line.startswith("#") or line == "":
			continue
		if line.startswith("include "):
			path = line.split()[1]
			for inc in glob.glob(root + path):
				ret += library_path_list(root, inc)
		else:
			ret.append(root + line)
	return ret

library_path+=library_path_list(root, root + "/etc/ld.so.conf")

def ld_copy(root):
	libdir=os.path.join(root,"lib")
	ld = os.path.join(libdir, "ld-linux.so.3")
	lddst = os.path.join(libdir, os.readlink(ld))
	ldln = "/lib/ld-linux.so.3"
	try:
		ldsrc = os.readlink(ldln)
		if ldsrc == lddst:
			return True
	except:
		pass
#	print "Change"
#	cmd=["ln", "-sf", lddst, ldln]
#	if os.getuid() != 0:
#		print "SUDO"
#		cmd = ["sudo"] + cmd
#	return call(cmd) == 0
	return True
	

if not ld_copy(root):
	print "Could not set ld-linux.so.3"

ldloader = os.path.join(root, "lib/arm-linux-gnueabi/ld-2.19.so")
env["LD_LIBRARY_PATH"] += ":".join(library_path)

def addp(newp, src, dst="/bin/true"):
	newp.append("/bin/"+src+"="+dst)
	newp.append("/sbin/"+src+"="+dst)
	newp.append("/usr/bin/"+src+"="+dst)
	newp.append("/usr/sbin/"+src+"="+dst)
	return newp
newp=[]
newp = addp(newp, "mount")
#newp = addp(newp, "insserv")
#newp = addp(newp, "env", "/usr/bin/env.fakechroot")
newp = addp(newp, "ischroot")
newp = addp(newp, "ldd", "/usr/bin/ldd.fakechroot")
newp = addp(newp, "mkfifo")
newp = addp(newp, "ldconfig")
newp = addp(newp, "ldconfig.real")

for part in env["FAKECHROOT_CMD_SUBST"].split(":"):
	pr, rep = part.split("=", 1)
	if not pr.endswith("chroot"):
		newp.append(part)

env["FAKECHROOT_CMD_SUBST"] = ":".join(newp)

del env["FAKECHROOT_CMD_ORIG"]
#env["FAKECHROOT_BASE"] = env["FAKECHROOT_BASE_ORIG"]
#del env["FAKECHROOT_BASE_ORIG"]

env["LC_ALL"] = "C"
env["LANGUAGE"] = "C"
env["LANG"] = "C"

senv=[]
for k, v in env.items():
	senv.append(k+"="+v)
senv.append("FAKECHROOT_BASE="+root)

cmd=["/usr/sbin/chroot", root]
cmd+=["env", "-"] + senv + sys.argv[2:]
ret = call(cmd)
exit(ret)


