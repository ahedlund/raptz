#!/bin/bash

# Rapid apt 

set -e

. lib/common.inc

# Print help
_help()
{
	echo ""
	echo "$(basename $0) [options]"
	echo ""
	echo "Enter into a previously strapped sysroot"
	echo ""
	_common_opts
	echo ""
	exit
}


_common_opts "-" $@
_common_ui
_common_chk_mount

# Prepare qemu chroot
if ! [ -a $RAPTZ_SYSROOT/usr/bin/qemu-arm-static ] ; then
	cp /usr/bin/qemu-arm-static $RAPTZ_SYSROOT/usr/bin/qemu-arm-static
	ln -sf $RAPTZ_SYSROOT/lib/ld-linux.so.3 /lib/ld-linux.so.3
	
	
	RAPTZ_CHROOT_SETUP=1
else
	RAPTZ_CHROOT_SETUP=0
fi
# Mount dev, dev/pts and proc
mount -t proc proc $RAPTZ_SYSROOT/proc
mount -o bind /dev $RAPTZ_SYSROOT/dev
mount -o bind /dev/pts $RAPTZ_SYSROOT/dev/pts
	
# Do chroot
RET=0
export LC_ALL=C LANGUAGE=C LANG=C

ASHELL=/bin/dash

# Disable starting of daemons
cat > $RAPTZ_SYSROOT/usr/sbin/policy-rc.d <<EOF
#!/bin/dash
exit 101
EOF
chmod 755 $RAPTZ_SYSROOT/usr/sbin/policy-rc.d

RET=0
echo "chroot $RAPTZ_SYSROOT $ASHELL -- $@"
export LC_ALL=C 
export LANGUAGE=C 
export LANG=C
if ! chroot $RAPTZ_SYSROOT $ASHELL -- $@; then
	echo "Chroot failed"
	RET=1
fi

# When using multiple roots this causes problems. The unmount below should catch all errors
#if LPIDS=$(ps -A -o pid,cmd h | grep  "^[0-9]*\ /usr/bin/qemu-arm-static"); then
#	_error "Left pids after execution... Please fix $LPIDS"
#	exit 1
#fi

# Remove daemon disabler
rm $RAPTZ_SYSROOT/usr/sbin/policy-rc.d

sleep 0.1 # Sleep for less then a second giving qemu time to exit.
umount $RAPTZ_SYSROOT/dev/pts
umount $RAPTZ_SYSROOT/dev
umount $RAPTZ_SYSROOT/proc

if (( $RAPTZ_CHROOT_SETUP  )) ; then

	# Remove qemu chroot

	rm $RAPTZ_SYSROOT/usr/bin/qemu-arm-static
	rm /lib/ld-linux.so.3
fi

# Return status of the chroot
exit $RET

